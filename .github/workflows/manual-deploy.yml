name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      
      deploy_backend:
        description: 'Deploy backend'
        required: true
        default: true
        type: boolean
      
      deploy_frontend:
        description: 'Deploy frontend'
        required: true
        default: true
        type: boolean
      
      image_tag:
        description: 'Image tag to deploy (leave empty for latest)'
        required: false
        type: string

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  BACKEND_ECR_REPOSITORY: rediguard-backend
  FRONTEND_ECR_REPOSITORY: rediguard-frontend

permissions:
  id-token: write
  contents: read

jobs:
  manual-deploy:
    name: Manual Deployment
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsRole
        role-session-name: GitHubActions-ManualDeploy
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Set image tag
      id: set-tag
      run: |
        if [ -n "${{ github.event.inputs.image_tag }}" ]; then
          echo "IMAGE_TAG=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV
          echo "Using custom tag: ${{ github.event.inputs.image_tag }}"
        else
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          echo "Using latest tag"
        fi

    - name: Deploy backend
      if: ${{ github.event.inputs.deploy_backend == 'true' }}
      run: |
        echo "🚀 Deploying backend to ${{ github.event.inputs.environment }}..."
        
        # Verify image exists
        if aws ecr describe-images --repository-name $BACKEND_ECR_REPOSITORY --image-ids imageTag=$IMAGE_TAG --region $AWS_REGION; then
          echo "✅ Backend image $BACKEND_ECR_REPOSITORY:$IMAGE_TAG found"
        else
          echo "❌ Backend image $BACKEND_ECR_REPOSITORY:$IMAGE_TAG not found"
          exit 1
        fi
        
        # Add your deployment logic here
        echo "Backend deployment would happen here..."
        echo "Image: $ECR_REGISTRY/$BACKEND_ECR_REPOSITORY:$IMAGE_TAG"

    - name: Deploy frontend
      if: ${{ github.event.inputs.deploy_frontend == 'true' }}
      run: |
        echo "🚀 Deploying frontend to ${{ github.event.inputs.environment }}..."
        
        # Verify image exists
        if aws ecr describe-images --repository-name $FRONTEND_ECR_REPOSITORY --image-ids imageTag=$IMAGE_TAG --region $AWS_REGION; then
          echo "✅ Frontend image $FRONTEND_ECR_REPOSITORY:$IMAGE_TAG found"
        else
          echo "❌ Frontend image $FRONTEND_ECR_REPOSITORY:$IMAGE_TAG not found"
          exit 1
        fi
        
        # Add your deployment logic here
        echo "Frontend deployment would happen here..."
        echo "Image: $ECR_REGISTRY/$FRONTEND_ECR_REPOSITORY:$IMAGE_TAG"

    - name: Post-deployment verification
      run: |
        echo "🔍 Running post-deployment verification..."
        
        # Add health checks and verification logic here
        # For example:
        # - Test application endpoints
        # - Verify service health
        # - Run smoke tests
        
        echo "✅ Deployment verification completed"

    - name: Create deployment summary
      run: |
        echo "## 🚀 Manual Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Deployment Details:" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: \`${{ github.event.inputs.environment }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Backend Deployed**: \`${{ github.event.inputs.deploy_backend }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Frontend Deployed**: \`${{ github.event.inputs.deploy_frontend }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Image Tag**: \`$IMAGE_TAG\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Triggered By**: \`${{ github.actor }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit SHA**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ github.event.inputs.deploy_backend }}" == "true" ]]; then
          echo "### Backend Image:" >> $GITHUB_STEP_SUMMARY
          echo "\`$ECR_REGISTRY/$BACKEND_ECR_REPOSITORY:$IMAGE_TAG\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [[ "${{ github.event.inputs.deploy_frontend }}" == "true" ]]; then
          echo "### Frontend Image:" >> $GITHUB_STEP_SUMMARY
          echo "\`$ECR_REGISTRY/$FRONTEND_ECR_REPOSITORY:$IMAGE_TAG\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### Status: ✅ Deployment Completed Successfully" >> $GITHUB_STEP_SUMMARY
